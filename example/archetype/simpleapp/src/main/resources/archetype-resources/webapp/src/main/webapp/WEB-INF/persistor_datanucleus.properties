#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound}  Licensed to the Apache Software Foundation (ASF) under one
${symbol_pound}  or more contributor license agreements.  See the NOTICE file
${symbol_pound}  distributed with this work for additional information
${symbol_pound}  regarding copyright ownership.  The ASF licenses this file
${symbol_pound}  to you under the Apache License, Version 2.0 (the
${symbol_pound}  "License"); you may not use this file except in compliance
${symbol_pound}  with the License.  You may obtain a copy of the License at
${symbol_pound}  
${symbol_pound}         http://www.apache.org/licenses/LICENSE-2.0
${symbol_pound}         
${symbol_pound}  Unless required by applicable law or agreed to in writing,
${symbol_pound}  software distributed under the License is distributed on an
${symbol_pound}  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
${symbol_pound}  KIND, either express or implied.  See the License for the
${symbol_pound}  specific language governing permissions and limitations
${symbol_pound}  under the License.

${symbol_pound}
${symbol_pound} configuration file for the JDO/DataNucleus objectstore
${symbol_pound}

${symbol_pound} identifies @PersistenceCapable entities to be eagerly registered
${symbol_pound} if move class to other package (eg com.mycompany.myapp.dom) then update 
isis.persistor.datanucleus.RegisterEntities.packagePrefix=domainapp.dom.modules

${symbol_pound}
${symbol_pound} hook to perform additional initialization when JDO class metadata is loaded
${symbol_pound} default implementation will attempt to run 'create schema' for the specified schema.
${symbol_pound}
${symbol_pound}isis.persistor.datanucleus.classMetadataLoadedListener=org.apache.isis.objectstore.jdo.datanucleus.CreateSchemaFromClassMetadata


${symbol_pound} whether to persist the event data as a "clob" or as a "zipped" byte[]
${symbol_pound} default is "zipped"
${symbol_pound}isis.persistor.datanucleus.PublishingService.serializedForm=zipped


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} DataNucleus' configuration
${symbol_pound}
${symbol_pound} The 'isis.persistor.datanucleus.impl' prefix is stripped off,
${symbol_pound} remainder is passed through to DataNucleus
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

isis.persistor.datanucleus.impl.datanucleus.autoCreateSchema=true
isis.persistor.datanucleus.impl.datanucleus.validateTables=true
isis.persistor.datanucleus.impl.datanucleus.validateConstraints=true


${symbol_pound}
${symbol_pound} Require explicit persistence (since entities are Comparable and using ObjectContracts${symbol_pound}compareTo).
${symbol_pound} see http://www.datanucleus.org/products/accessplatform_3_0/jdo/transaction_types.html
${symbol_pound}
isis.persistor.datanucleus.impl.datanucleus.persistenceByReachabilityAtCommit=false


${symbol_pound}
${symbol_pound} How column names are identified 
${symbol_pound} (http://www.datanucleus.org/products/datanucleus/jdo/orm/datastore_identifiers.html)
${symbol_pound}
isis.persistor.datanucleus.impl.datanucleus.identifier.case=PreserveCase


${symbol_pound}
${symbol_pound} L2 cache
${symbol_pound} off except if explicitly marked as cacheable
${symbol_pound} http://www.datanucleus.org/products/datanucleus/jdo/cache.html
${symbol_pound}
isis.persistor.datanucleus.impl.datanucleus.cache.level2.type=none
isis.persistor.datanucleus.impl.datanucleus.cache.level2.mode=ENABLE_SELECTIVE



${symbol_pound}
${symbol_pound} uncomment to use JNDI rather than direct JDBC
${symbol_pound}
${symbol_pound}isis.persistor.datanucleus.impl.datanucleus.ConnectionFactoryName=java:comp/env/jdbc/quickstart

${symbol_pound}
${symbol_pound} uncomment to use JTA resource
${symbol_pound}
${symbol_pound}isis.persistor.datanucleus.impl.datanucleus.ConnectionFactory2Name=java:comp/env/jdbc/quickstart-nontx
${symbol_pound}isis.persistor.datanucleus.impl.javax.jdo.option.TransactionType=JTA



${symbol_pound}
${symbol_pound}
${symbol_pound} JDBC connection details
${symbol_pound} ... are in persistor.properties
${symbol_pound}
${symbol_pound}
