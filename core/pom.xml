<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
	license agreements. See the NOTICE file distributed with this work for additional
	information regarding copyright ownership. The ASF licenses this file to
	you under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
	by applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
	OF ANY KIND, either express or implied. See the License for the specific
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.isis</groupId>
		<artifactId>isis-parent</artifactId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>../isis-parent/pom.xml</relativePath>
	</parent>

	<groupId>org.apache.isis.core</groupId>
	<artifactId>isis-core</artifactId>

	<packaging>pom</packaging>

	<name>Apache Isis Core</name>

	<url>https://isis.apache.org</url>

	<description>
        Core framework, providing metamodel, runtime and core APIs.
    </description>

	<properties>

		<isis.skipTests>false</isis.skipTests>
		<maven.test.skip>${isis.skipTests}</maven.test.skip>

		<coreBaseDir>${project.build.directory}/..</coreBaseDir>

		<jar-plugin.automaticModuleName>org.apache.isis.core</jar-plugin.automaticModuleName>
		<git-plugin.propertiesDir>org/apache/isis/core</git-plugin.propertiesDir>
		<git-plugin.gitDir>${coreBaseDir}/../.git</git-plugin.gitDir>

		<maven.compiler.arg>-parameters</maven.compiler.arg>

		<dependency.locations.enabled>false</dependency.locations.enabled>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<surefire-plugin.argLine>-Xms1024m -Xmx1024m</surefire-plugin.argLine>
		<testsToExclude>**/*IntegrationTest.java</testsToExclude>

		<checkstyle.configLocation>${coreBaseDir}/codequality/checkstyle.xml</checkstyle.configLocation>
		<pmd.ruleset>${coreBaseDir}/codequality/pmd.xml</pmd.ruleset>

		<license.additional-notes>In addition, Apache Isis uses some
			JavaScript libraries:

			* Twitter Bootstrap, licensed under MIT [1]
			*
			Bootstrap-Growl (JQuery plugin), licensed under MIT license [2]
			*
			LiveQuery (JQuery plugin), licensed under MIT license [3]
			* Wicket
			Bootstrap, licenced under ASL 2 [4]
			* Bootstrap Datetimepicker,
			licensed under MIT licence [5]
			* Moment.js, licenced under MIT licence
			[6]

			[1] https://github.com/twbs/bootstrap/blob/master/LICENSE
			[2]
			https://github.com/mouse0270/bootstrap-growl/blob/master/LICENSE
			[3]
			https://github.com/brandonaaron/livequery#license
			[4]
			https://github.com/l0rdn1kk0n/wicket-bootstrap
			[5]
			https://github.com/Eonasdan/bootstrap-datetimepicker/blob/master/LICENSE
			[6] https://github.com/moment/moment/blob/develop/LICENSE</license.additional-notes>


		<!-- LIBRARY DEPENDENCIES -->

		<approvaltests.version>10.4.0</approvaltests.version>

		<assertj-guava.version>3.4.0</assertj-guava.version>

		<camel.version>3.9.0</camel.version>

		<commons-email.version>1.5</commons-email.version>
		<commons-httpclient.version>4.5.12</commons-httpclient.version>
		<commons-io.version>2.8.0</commons-io.version>

		<cucumber.version>6.9.1</cucumber.version>

		<cxf-rt-rs-client.version>3.4.3</cxf-rt-rs-client.version>

		<danhaywood-java-assertjext.version>0.1.0</danhaywood-java-assertjext.version>
		<danhaywood-java-testsupport.version>1.0.0</danhaywood-java-testsupport.version>

		<datanucleus-api-jdo.version>5.2.5</datanucleus-api-jdo.version>
		<datanucleus-core.version>5.2.6</datanucleus-core.version>
		<datanucleus-jdo-api.version>3.2.0-m13</datanucleus-jdo-api.version>
		<datanucleus-jdo-query.version>5.0.9</datanucleus-jdo-query.version>
		<datanucleus-jodatime.version>5.2.0-release</datanucleus-jodatime.version>
		<datanucleus-maven-plugin.version>5.2.1</datanucleus-maven-plugin.version>
		<datanucleus-rdbms.version>5.2.6</datanucleus-rdbms.version>

		<docx4j.version>6.1.2</docx4j.version>

		<easymock.version>4.2</easymock.version>
		<error_prone_annotations.version>2.6.0</error_prone_annotations.version>

		<findbugs-annotations.version>3.0.1u2</findbugs-annotations.version>

		<git-commit-id-plugin.version>4.0.4</git-commit-id-plugin.version>
		<guava.version>30.1.1-jre</guava.version>

		<htmlparser.version>2.1</htmlparser.version>

		<jakarta.annotation-api.version>2.0.0</jakarta.annotation-api.version>
		<javaee.version>8.0.1</javaee.version>
		<javafaker.version>1.0.2</javafaker.version>
		<javassist.version>3.27.0-GA</javassist.version>
		<javax-servlet.version>4.0.1</javax-servlet.version>
		<jaxb-core.version>2.3.0.1</jaxb-core.version> <!-- 2.3.2 is not yet available -->
		<jaxb-impl.version>2.3.4</jaxb-impl.version>
		<jaxws-ri.version>2.3.4</jaxws-ri.version>

		<jbcrypt.version>0.4</jbcrypt.version>
		<jboss-jaxrs-api_2.0_spec.version>1.0.1.Final</jboss-jaxrs-api_2.0_spec.version>

		<!-- v3.2 not available yet, use datanucleus staging for now -->
		<!-- <jdo-api.version>3.2</jdo-api.version> -->

		<jdom.version>2.0.2</jdom.version>
		<jmock.version>2.12.0</jmock.version>
		<joda-time.version>2.10.10</joda-time.version>
		<jopt-simple.version>6.0-alpha-3</jopt-simple.version>
		<jquery-ui.version>1.12.1</jquery-ui.version>

		<jsr305.version>3.0.2</jsr305.version>
		<junit-platform.version>1.7.1</junit-platform.version>

		<log4jdbc-remix.version>0.2.7</log4jdbc-remix.version>

		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>		<!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->

		<!-- See https://nodejs.org/en/download/ for latest node and npm (lts)
			versions -->
		<node.version>v12.14.0</node.version>
		<npm.version>6.13.1</npm.version>

		<objenesis.version>3.2</objenesis.version>
		<ognl.version>3.2.20</ognl.version>

		<pdfbox.version>2.0.23</pdfbox.version>
		<picocontainer.version>2.15</picocontainer.version>
		<poi.version>4.1.2</poi.version>

		<quartz-scheduler.version>2.3.2</quartz-scheduler.version>

		<resteasy4-spring-boot-starter.version>4.8.0.Final</resteasy4-spring-boot-starter.version>
		<resteasy.version>4.6.0.Final</resteasy.version> <!-- keep in sync with property defined in resteasy4-spring-boot-starter -->

		<select2.version>4.0.13</select2.version>
		<shiro.version>1.7.1</shiro.version>
		<simpleslackapi.version>1.3.0</simpleslackapi.version>
		<slf4j-api.version>1.7.30</slf4j-api.version> <!-- as provided by spring-boot, needed to solve convergence issues -->
		<spring-boot.version>2.4.5</spring-boot.version> <!-- has no effect here, needs to be set in isis-parent/pom.xml -->
		<summernote.version>0.8.11</summernote.version>
		<swagger-core.version>1.6.2</swagger-core.version>

		<togglz.version>2.9.6</togglz.version>

		<vaadin.version>19.0.4</vaadin.version>

		<wicket.version>8.11.0</wicket.version>
		<wicket-bootstrap.version>2.0.14</wicket-bootstrap.version> <!-- de.agilecoders.wicket:wicket-bootstrap... -->
		<wicket-bootstrap-datetimepicker.version>4.17.47</wicket-bootstrap-datetimepicker.version>
		<wicket-fullcalendar.version>4.2</wicket-fullcalendar.version>
		<wicket-source.version>7.0.0</wicket-source.version>
		<wicket-webjars.version>2.0.19</wicket-webjars.version>

		<wicketstuff.version>8.11.0</wicketstuff.version> <!-- org.wicketstuff:wicketstuff-select2 -->
		<wicketstuff-gmap3.version>${wicket.version}</wicketstuff-gmap3.version>

		<xdocreport.version>1.0.6</xdocreport.version>

	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url> <!--TODO not yet supports SSL, even required? -->
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Repository</id>
			<url>https://repository.apache.org/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- <repository> <id>Spring Milestones</id> <url>https://repo.spring.io/milestone/</url>
			<snapshots> <enabled>false</enabled> </snapshots> </repository> -->

		<!-- required for RestEasy -->
		<repository>
			<id>JBoss Public Release</id>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>


	<build>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<extensions>
			<!-- scp and sftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.4.3</version>
			</extension>
			<!-- ftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.4.3</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>3.2.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>

				<!-- IDE support for Eclipse (if not using m2e). (NetBeans 6.7+ and IDEA
					7.0+ also have built-in support -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<projectNameTemplate>[groupId].[artifactId]</projectNameTemplate>
					</configuration>
					<!-- use mvn eclipse:eclipse (no goals bound to phases) -->
				</plugin>

				<!-- Compile -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>false</showWarnings>
						<!-- defaults, to be overridden with option maven.compiler.release -->
						<source>1.8</source>
						<target>1.8</target>
						<compilerArgs>
							<arg>${maven.compiler.arg}</arg>
						</compilerArgs>
					</configuration>
					<!-- goal:compile binds to phase:compile -->
					<!-- goal:testCompile binds to phase:test-compile -->
				</plugin>

				<!-- Tests (ignore integration tests) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- override defaults and include everything unless explicitly excluded -->
						<includes>
							<include>**/*.java</include>
						</includes>
						<excludes>
							<exclude>${testsToExclude}</exclude>
						</excludes>
						<printSummary>false</printSummary>
						<argLine>@{argLine} ${surefire-plugin.argLine}</argLine>
					</configuration>
					<!-- goal:test binds to phase:test -->
				</plugin>

				<!-- Test Reporting -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<!-- goal:report is a report so is configured in the reporting section;
						invokes phase:test before running itself -->
				</plugin>


				<!-- Artifacts derived from code: javadoc; supports both build and report
					goals; not included as a build plugin except through profiles (to speed up
					the build) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<!-- as per http://stackoverflow.com/a/16743137/56880; only if using
							java 8 to build -->
						<!-- <additionalparam>-Xdoclint:none</additionalparam> -->
						<debug>true</debug>
						<minmemory>128m</minmemory>
						<maxmemory>1024m</maxmemory>
						<quiet>true</quiet>
						<doctitle>${project.name} ${project.version}</doctitle>
						<windowtitle>${project.name} ${project.version}</windowtitle>
						<testDoctitle>${project.name} ${project.version}
							(TEST API)
						</testDoctitle>
						<testWindowtitle>${project.name}
							${project.version} (TEST API)
						</testWindowtitle>
						<splitindex>true</splitindex>
						<encoding>${project.build.sourceEncoding}</encoding>
						<links>
							<link>https://docs.oracle.com/javase/8/docs/api/</link>
						</links>
						<linksource>true</linksource>
						<!-- http://jira.codehaus.org/browse/MJAVADOC-268 and http://jira.codehaus.org/browse/MJAVADOC-284 -->
						<detectOfflineLinks>false</detectOfflineLinks>
						<!-- <additionalparam> -Xdoclint:none </additionalparam> -->
					</configuration>
					<!-- goal:aggregate (for aggregator modules) has no binding; explicitly
						bound in profiles -->
					<!-- goal:jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:test-jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:javadoc is a report so is configured in the reporting section -->
				</plugin>

				<!-- Packaging: source jars of main and test code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!-- goal:aggregate (for aggregator modules) binds to phase:package -->
					<!-- goal:jar and goal:test-jar are meant to bind to phase:package,
						but doesn't seem to so bound explicitly -->
					<executions>
						<execution>
							<id>package-jars</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
					<configuration>
						<verbose>false</verbose>
						<useNativeGit>true</useNativeGit>
						<dotGitDirectory>${git-plugin.gitDir}</dotGitDirectory>

						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>

						<failOnNoGitDirectory>true</failOnNoGitDirectory>
						<injectAllReactorProjects>true</injectAllReactorProjects>

						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/${git-plugin.propertiesDir}/git.properties</generateGitPropertiesFilename>

						<abbrevLength>7</abbrevLength>
					</configuration>

				</plugin>


				<!-- Packaging: jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<!-- goal:jar binds to phase:package -->
					<!-- goal:test-jar supposedly binds to phase:package, but seems to need
						this explicit binding. -->
					<executions>
						<execution>
							<id>package-test-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<archive>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Automatic-Module-Name>${jar-plugin.automaticModuleName}</Automatic-Module-Name>
								<Implementation-Vendor-Id>org.apache.isis</Implementation-Vendor-Id>
								<Implementation-Vendor>Apache Isis™ Project</Implementation-Vendor>
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<SCM-Revision>${git.commit.id.abbrev}</SCM-Revision>
								<!-- required for DN plugin.xml loading -->
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<!-- no requirement as of yet. <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
									<Bundle-Name>${jar-plugin.automaticModuleName}</Bundle-Name> <Bundle-Version>2.0.0-SNAPSHOT</Bundle-Version>
									<Bundle-Vendor>Apache Isis™ Project</Bundle-Vendor> -->
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>


				<!-- Packaging: WAR -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin}</version>
					<configuration>
						<warSourceExcludes>
							WEB-INF/lib/*.jar
						</warSourceExcludes>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
					<!-- goal:war binds to phase:package -->
				</plugin>


				<!-- release (is also configured in descendant modules) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<!-- overriddes the default ('clean verify') as workaround -->
						<preparationGoals>clean install</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<localCheckout>true</localCheckout>
						<pushChanges>false</pushChanges>
						<waitBeforeTagging>1</waitBeforeTagging>
					</configuration>
					<!-- goal:clean (for aggregator modules) has no bindings; cleans up
						release.properties and any backup POM files -->
					<!-- goal:prepare (for aggregator modules) has no bindings; prepares
						for release in SCM (modifying x.x-SNAPSHOT to x.x) -->
					<!-- goal:update-versions (for aggregator modules) has no bindings;
						updates versions eg to SNAPSHOT -->
					<!-- etc; none of the goals has a binding. -->
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<configuration>
						<rules>
							<requireMavenVersion>
								<version>[3.5.0,)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>[1.8.0,)</version>
							</requireJavaVersion>
							<!-- seemingly not compatible with use of 2.0.0-SNAPSHOT placeholders
								<requirePluginVersions> <message>All plugin versions must be defined!</message>
								<banLatest>true</banLatest> <banRelease>true</banRelease> </requirePluginVersions> -->
							<DependencyConvergence />
						</rules>
					</configuration>
					<!-- goal:enforce supposedly binds to phase:validate, but explicit binding
						seems to be required -->
					<executions>
						<execution>
							<id>validate-enforce</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>1.5.1</version>
					<configuration>
						<statistics>true</statistics>
						<jswarn>false</jswarn>
						<suffix>.min</suffix>
						<excludes>
							<exclude>**/moment.js</exclude>
							<exclude>**/moment.min.js</exclude>
							<exclude>**/bootstrap-datetimepicker.js</exclude>
							<exclude>**/bootstrap-datetimepicker.min.js</exclude>
							<exclude>**/bootstrap-growl.js</exclude>
							<exclude>**/bootstrap-growl.min.js</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>compress</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>


		<!-- build plugins; apply to all inheriting modules. Note that some plugins
			also come from the "super-POM" for the default bindings. For example, in
			the 'default' lifecycle, the resources, compiler, surefire, jar, install
			and deploy plugins are automatically included because they provide the default
			bindings. For the 'site' lifecycle, the site plugin is automatically included. -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- run using: mvn org.apache.rat:apache-rat-plugin:check -->
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- overrides the default ('clean verify') -->
					<preparationGoals>clean install</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<dependencyManagement>

		<dependencies>

			<!-- CHILD MODULES -->
			<dependency>
				<!-- meant to be imported only when on JDK 11 or newer; usually by wrapping
					this dependency within a profile, that activates based on the JDK version
					in use -->
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-jdk-supplemental</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.commons</groupId>
				<artifactId>isis-commons</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-internaltestsupport</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-config</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-schema</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-interaction</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-runtime</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-runtimeservices</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-transaction</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-webapp</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-common</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-rendering</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-viewer</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-testing</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-security</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-bypass</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-keycloak</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-shiro</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-spring</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-codegen-bytebuddy</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-provider</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-integration</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-datanucleus</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-spring</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-integration</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-eclipselink</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-jaxrsresteasy4</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-model</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-ui</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-viewer</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-unittests</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-integtests</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-integspecs</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-jdo</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-jpa</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-webapp</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-jdk11</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>


			<!-- THIRD PARTY DEPENDENCIES -->

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>

			<dependency>
				<groupId>com.approvaltests</groupId>
				<artifactId>approvaltests</artifactId>
				<version>${approvaltests.version}</version>
			</dependency>

			<dependency>
				<groupId>com.danhaywood.java</groupId>
				<artifactId>danhaywood-java-assertjext</artifactId>
				<version>${danhaywood-java-assertjext.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danhaywood.java</groupId>
				<artifactId>danhaywood-java-testsupport</artifactId>
				<version>${danhaywood-java-testsupport.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${error_prone_annotations.version}</version>
			</dependency>

			<!-- provides @Nullable -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${findbugs-annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.javafaker</groupId>
				<artifactId>javafaker</artifactId>
				<version>${javafaker.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ullink.slack</groupId>
				<artifactId>simpleslackapi</artifactId>
				<version>${simpleslackapi.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb-impl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.ws</groupId>
				<artifactId>jaxws-ri</artifactId>
				<version>${jaxws-ri.version}</version>
				<type>pom</type>
			</dependency>


			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-core</artifactId>
				<version>${wicket-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-extensions</artifactId>
				<version>${wicket-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-themes</artifactId>
				<version>${wicket-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket.webjars</groupId>
				<artifactId>wicket-webjars</artifactId>
				<version>${wicket-webjars.version}</version>
			</dependency>

			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.document.docx</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.template.freemarker</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.converter.docx.xwpf</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>org.apache.poi.xwpf.converter.pdf</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>org.apache.poi.xwpf.converter.core</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-core</artifactId>
				<version>${swagger-core.version}</version>
			</dependency>

			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>${jakarta.annotation-api.version}</version>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javaee.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax-servlet.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.jdo</groupId>
				<artifactId>jdo-api</artifactId>
				<version>${jdo-api.version}</version>
			</dependency>

			<dependency>
				<groupId>net.sf.jopt-simple</groupId>
				<artifactId>jopt-simple</artifactId>
				<version>${jopt-simple.version}</version>
			</dependency>

			<dependency>
				<groupId>net.ftlines.wicket-fullcalendar</groupId>
				<artifactId>wicket-fullcalendar-core</artifactId>
				<version>${wicket-fullcalendar.version}</version>
			</dependency>
			<dependency>
				<groupId>net.ftlines.wicket-source</groupId>
				<!-- <groupId>com.github.jennybrown8.wicket-source</groupId> -->
				<artifactId>wicket-source</artifactId>
				<version>${wicket-source.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>ognl</groupId>
				<artifactId>ognl</artifactId>
				<version>${ognl.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javassist</groupId>
						<artifactId>javassist</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-stream</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-ognl</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jaxb</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-javaconfig</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test-spring</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons-email.version}</version>
				<exclusions>
					<!-- excluded because provided by javax:javaee-api -->
					<exclusion>
						<groupId>com.sun.mail</groupId>
						<artifactId>javax.mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-client</artifactId>
				<version>${cxf-rt-rs-client.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket</artifactId>
				<version>${wicket.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-core</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-devutils</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-request</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-util</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-extensions</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-datetime</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-auth-roles</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-spring</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-guava</artifactId>
				<version>${assertj-guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-api-jdo</artifactId>
				<version>${datanucleus-api-jdo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-core</artifactId>
				<version>${datanucleus-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-jdo-query</artifactId>
				<version>${datanucleus-jdo-query.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-jodatime</artifactId>
				<version>${datanucleus-jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-rdbms</artifactId>
				<version>${datanucleus-rdbms.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>javax.jdo</artifactId>
				<version>${datanucleus-jdo-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.docx4j</groupId>
				<artifactId>docx4j</artifactId>
				<version>${docx4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.htmlparser</groupId>
				<artifactId>htmlparser</artifactId>
				<version>${htmlparser.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec.javax.ws.rs</groupId>
				<artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
				<version>${jboss-jaxrs-api_2.0_spec.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>${jdom.version}</version>
			</dependency>


			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-spring-boot-starter</artifactId>
				<version>${resteasy4-spring-boot-starter.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.jboss.resteasy</groupId>
			    <artifactId>resteasy-jaxb-provider</artifactId>
			    <version>${resteasy.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-quartz</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>${jmock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>${jmock.version}</version>
			</dependency>

			<dependency>
				<groupId>org.lazyluke</groupId>
				<artifactId>log4jdbc-remix</artifactId>
				<version>${log4jdbc-remix.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mindrot</groupId>
				<artifactId>jbcrypt</artifactId>
				<version>${jbcrypt.version}</version>
			</dependency>

			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>

			<dependency>
				<groupId>org.picocontainer</groupId>
				<artifactId>picocontainer</artifactId>
				<version>${picocontainer.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz-scheduler.version}</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz-scheduler.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-core</artifactId>
				<version>${togglz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-junit</artifactId>
				<version>${togglz.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-servlet</artifactId>
				<version>${togglz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-console</artifactId>
				<version>${togglz.version}</version>
			</dependency>

			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>jquery-ui</artifactId>
				<version>${jquery-ui.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>Eonasdan-bootstrap-datetimepicker</artifactId>
				<version>${wicket-bootstrap-datetimepicker.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.webjars</groupId>
						<artifactId>momentjs</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>select2</artifactId>
				<version>${select2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>summernote</artifactId>
				<version>${summernote.version}</version>
			</dependency>

			<dependency>
				<groupId>org.wicketstuff</groupId>
				<artifactId>wicketstuff-gmap3</artifactId>
				<version>${wicketstuff-gmap3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.wicketstuff</groupId>
				<artifactId>wicketstuff-select2</artifactId>
				<version>${wicketstuff.version}</version>
			</dependency>

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-junit-platform-engine</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit-jupiter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-console</artifactId>
				<version>${junit-platform.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>apache-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<goals>
									<goal>toolchain</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<toolchains>
								<jdk>
									<version>1.8</version>
									<vendor>openjdk</vendor>
								</jdk>
							</toolchains>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jdk11</id>
			<activation>
				<jdk>[11,)</jdk>
			</activation>

			<build>
				<plugins>
					<!-- Compile -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<showDeprecation>true</showDeprecation>
							<showWarnings>true</showWarnings>
							<source>8</source>
							<target>8</target>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
						<version>0.14.0</version>
						<configuration>
							<removeOldOutput>true</removeOldOutput>
							<episode>true</episode>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>owasp</id>
			<activation>
				<property>
					<name>owasp</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>6.1.5</version>
						<executions>
							<execution>
								<id>owasp-aggregate</id>
								<goals>
									<goal>aggregate</goal>
								</goals>
								<configuration>
									<skipProvidedScope>true</skipProvidedScope>
									<skipRuntimeScope>true</skipRuntimeScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jdeps</id>
			<activation>
				<property>
					<name>jdeps</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
						<version>3.1.2</version>
						<executions>
							<execution>
								<id>jdeps-jdkinternals</id>
								<goals>
									<goal>jdkinternals</goal>
									<goal>test-jdkinternals</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>src</id>
			<activation>
				<property>
					<name>!skip.src</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>git</id>
			<activation>
				<property>
					<name>git</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- as per https://stackoverflow.com/a/28860520/56880 allows -Dgpg.passphrase=
				to be used rather than gpg.useagent inherited from parent. Note that this
				requires gpg v2.1+ -->
			<id>gpg</id>
			<activation>
				<property>
					<name>gpg.passphrase</name>
				</property>
			</activation>
			<properties>
				<gpg.useagent>false</gpg.useagent>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-release-artifacts</id>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>datanucleusenhance</id>
			<activation>
				<property>
					<name>isis-app-starter-datanucleusenhance</name>
					<value>true</value>
				</property>
				<!-- <file> <exists>${basedir}/logging-dn-enhance.properties</exists>
					</file> -->
			</activation>
			<properties>
				<datanucleus-maven-plugin.log4jConfiguration>${basedir}/logging-dn-enhance.properties</datanucleus-maven-plugin.log4jConfiguration>
				<datanucleus-maven-plugin.verbose>true</datanucleus-maven-plugin.verbose>
				<datanucleus-maven-plugin.fork>false</datanucleus-maven-plugin.fork>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-maven-plugin</artifactId>
						<version>${datanucleus-maven-plugin.version}</version>
						<configuration>
							<fork>${datanucleus-maven-plugin.fork}</fork>
							<log4jConfiguration>${datanucleus-maven-plugin.log4jConfiguration}</log4jConfiguration>
							<verbose>${datanucleus-maven-plugin.verbose}</verbose>
						</configuration>
						<executions>
							<execution>
								<id>process-classes</id>
								<phase>process-classes</phase>
								<goals>
									<goal>enhance</goal>
								</goals>
							</execution>
							<execution>
								<id>process-test-classes</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>test-enhance</goal>
								</goals>
								<configuration>
									<metadataDirectory>${project.build.testOutputDirectory}</metadataDirectory>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-core</artifactId>
								<version>${datanucleus-core.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-api-jdo</artifactId>
								<version>${datanucleus-api-jdo.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-jodatime</artifactId>
								<version>${datanucleus-jodatime.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<modules>

		<module>../supplemental-model</module>

		<module>jdk-supplemental</module>

		<module>../commons</module>

		<module>../api/schema</module>
		<module>../api/applib</module>

		<module>codegen-bytebuddy</module>
		<module>config</module>
		<module>interaction</module>
		<module>internaltestsupport</module>
		<module>metamodel</module>
		<module>runtime</module>
		<module>runtimeservices</module>
		<module>transaction</module>
		<module>webapp</module>

		<module>security</module>
		<module>../security/bypass</module>
		<module>../security/keycloak</module>
		<module>../security/shiro</module>
		<module>../security/spring</module>

		<module>../viewers/common</module>
		<module>../viewers/restfulobjects</module>
		<module>../viewers/wicket</module>

		<module>../persistence/jdo</module>
		<module>../persistence/jpa</module>

	</modules>

</project>


