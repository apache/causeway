name: Build Package Push All

on: [push]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      # to be shared amoung all steps of this job
      BASELINE: 2.0.0-M2
      PROJECT_ROOT_PATH: ${{ github.workspace }}
      CI_SCRIPTS_PATH: ${{ github.workspace }}/scripts/ci
      
      # not used, would be nice if we could transform the TIMESTAMP string into the REVISION 
      # variable here, but it seems github not yet has any string expression manipulation 
      # operators other than concatination   
      TIMESTAMP: ${{ github.event.head_commit.timestamp }}
      
      # set this to 'deploy' when intent is to push the built packages to a repo
      # requires 'secrets' which we don't have yet 
      MVN_STAGES: install
      
      # though equivalent, setting SHARED_VARS_FILE to ~/.env breaks the build, not sure why
      # the tilde character appears to produce strange side-effects when used here  
      SHARED_VARS_FILE: /home/runner/.env

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Print Maven Version
      run: mvn --version
    - name: Setup Script Environment
      shell: bash
      # we write the more tricky varibles to the $SHARED_VARS_FILE using the full power of bash commands
      # then we simply print all the (non-secret) variables as used by the build scripts to the console
      run: |
        echo REVISION=$BASELINE.$(date +%Y%m%d)-$(date +%H%M)-$(echo $GITHUB_SHA | cut -c1-8) > $SHARED_VARS_FILE
        echo GCPAPPENGINEREPO_URL=https\://repo.incode.work >> $SHARED_VARS_FILE
        echo ==============  ENV  =================
        echo BASELINE\: $BASELINE
        echo TIMESTAMP\: $TIMESTAMP
        echo PROJECT_ROOT_PATH\: $PROJECT_ROOT_PATH
        echo CI_SCRIPTS_PATH\: $CI_SCRIPTS_PATH
        echo MVN_STAGES\: $MVN_STAGES
        cat $SHARED_VARS_FILE
        echo ======================================
    - name: Build Mixins
      shell: bash
      run: bash $CI_SCRIPTS_PATH/build-mixins.sh
    - name: Build Core
      shell: bash
      run: bash $CI_SCRIPTS_PATH/build-core.sh
        
 
# FOR DEBUG USE
#   - name: Dump GitHub context 
#     env:
#       ENV_CONTEXT: ${{ toJson(env) }}
#     run: echo "$ENV_CONTEXT"
#   - name: Dump GitHub context 
#     env:
#       GITHUB_CONTEXT: ${{ toJson(github) }}
#     run: echo "$GITHUB_CONTEXT"
#   - name: Dump job context
#     env:
#       JOB_CONTEXT: ${{ toJson(job) }}
#     run: echo "$JOB_CONTEXT"
#   - name: Dump steps context
#     env:
#       STEPS_CONTEXT: ${{ toJson(steps) }}
#     run: echo "$STEPS_CONTEXT"
#   - name: Dump runner context
#     env:
#       RUNNER_CONTEXT: ${{ toJson(runner) }}
#     run: echo "$RUNNER_CONTEXT"
#   - name: Dump strategy context
#     env:
#       STRATEGY_CONTEXT: ${{ toJson(strategy) }}
#     run: echo "$STRATEGY_CONTEXT"
#   - name: Dump matrix context
#     env:
#       MATRIX_CONTEXT: ${{ toJson(matrix) }}
#     run: echo "$MATRIX_CONTEXT"
           
           