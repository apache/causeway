name: Build and Test (w/ Gradle)

on:
#disable gradle build until ISIS-2437 is resolved
  schedule:
    # * dummy, such that virtually never runs
    - cron:  '0 0 1 1 0'
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master

jobs:
  build:
    name: build-local-no-push-gradle
    runs-on: ubuntu-latest
    env:
      # to be shared among all steps of this job
      BASELINE: 2.0.0-M2
      PROJECT_ROOT_PATH: ${{ github.workspace }}
      CI_SCRIPTS_PATH: ${{ github.workspace }}/scripts/ci
      
      # not used, would be nice if we could transform the TIMESTAMP string into the REVISION 
      # variable here, but it seems github not yet has any string expression manipulation 
      # operators other than concatination   
      TIMESTAMP: ${{ github.event.head_commit.timestamp }}

    steps:
    - uses: actions/checkout@v2.3.4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
    
    - name: Set up Gradle and print Version
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.5.1
        wrapper-cache-enabled: true
        dependencies-cache-enabled: true
        arguments: --version
    
    - name: Setup Script Environment
      shell: bash
      run: |
        echo ==============  ENV  =================
        echo BASELINE         \: $BASELINE
        echo TIMESTAMP        \: $TIMESTAMP
        echo PROJECT_ROOT_PATH\: $PROJECT_ROOT_PATH
        echo CI_SCRIPTS_PATH  \: $CI_SCRIPTS_PATH
        echo MVN_STAGES       \: $MVN_STAGES
        echo ======================================
    
    - name: Build Artifacts (w/ Gradle)
      shell: bash
      run: bash $CI_SCRIPTS_PATH/build-artifacts-using-gradle.sh
#      env:
#        # also build and run regressiontests and kroviz
#        MVN_ADDITIONAL_OPTS: -Dregressiontests-module -Dkroviz-module

# FOR DEBUG USE
#   - name: Dump GitHub context 
#     env:
#       ENV_CONTEXT: ${{ toJson(env) }}
#     run: echo "$ENV_CONTEXT"
#   - name: Dump GitHub context 
#     env:
#       GITHUB_CONTEXT: ${{ toJson(github) }}
#     run: echo "$GITHUB_CONTEXT"
#   - name: Dump job context
#     env:
#       JOB_CONTEXT: ${{ toJson(job) }}
#     run: echo "$JOB_CONTEXT"
#   - name: Dump steps context
#     env:
#       STEPS_CONTEXT: ${{ toJson(steps) }}
#     run: echo "$STEPS_CONTEXT"
#   - name: Dump runner context
#     env:
#       RUNNER_CONTEXT: ${{ toJson(runner) }}
#     run: echo "$RUNNER_CONTEXT"
#   - name: Dump strategy context
#     env:
#       STRATEGY_CONTEXT: ${{ toJson(strategy) }}
#     run: echo "$STRATEGY_CONTEXT"
#   - name: Dump matrix context
#     env:
#       MATRIX_CONTEXT: ${{ toJson(matrix) }}
#     run: echo "$MATRIX_CONTEXT"
           
           